{"remainingRequest":"F:\\小宝贝\\论文\\物流项目\\模板\\基于SpringBoot+Vue实现的物流管理系统\\前端代码\\web-app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\小宝贝\\论文\\物流项目\\模板\\基于SpringBoot+Vue实现的物流管理系统\\前端代码\\web-app\\src\\views\\logging\\LoginLog.vue?vue&type=style&index=0&id=2ca09a85&scoped=true&lang=css","dependencies":[{"path":"F:\\小宝贝\\论文\\物流项目\\模板\\基于SpringBoot+Vue实现的物流管理系统\\前端代码\\web-app\\src\\views\\logging\\LoginLog.vue","mtime":1671336847744},{"path":"F:\\小宝贝\\论文\\物流项目\\模板\\基于SpringBoot+Vue实现的物流管理系统\\前端代码\\web-app\\node_modules\\css-loader\\dist\\cjs.js","mtime":1704694304351},{"path":"F:\\小宝贝\\论文\\物流项目\\模板\\基于SpringBoot+Vue实现的物流管理系统\\前端代码\\web-app\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1704694305094},{"path":"F:\\小宝贝\\论文\\物流项目\\模板\\基于SpringBoot+Vue实现的物流管理系统\\前端代码\\web-app\\node_modules\\postcss-loader\\src\\index.js","mtime":1704694305086},{"path":"F:\\小宝贝\\论文\\物流项目\\模板\\基于SpringBoot+Vue实现的物流管理系统\\前端代码\\web-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1704694273307},{"path":"F:\\小宝贝\\论文\\物流项目\\模板\\基于SpringBoot+Vue实现的物流管理系统\\前端代码\\web-app\\node_modules\\vue-loader\\lib\\index.js","mtime":1704694305094}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5lZGl0YWJsZS1hZGQtYnRuIHsKICBtYXJnaW4tYm90dG9tOiAxNXB4Owp9Cg=="},{"version":3,"sources":["LoginLog.vue"],"names":[],"mappings":";AAqJA;AACA;AACA","file":"LoginLog.vue","sourceRoot":"src/views/logging","sourcesContent":["<template>\r\n    <div>\r\n      <!-- <div style=\"display: flex\">\r\n        <a-button size=\"large\" class=\"editable-add-btn\" @click=\"commodityVisible = true\">\r\n          <a-icon type=\"plus\"/>\r\n          新增商品\r\n        </a-button>\r\n        <a-input-search\r\n            placeholder=\"请输入商品名\"\r\n            enter-button=\"搜索商品\"\r\n            style=\"width: 400px;margin-left: 20px\"\r\n            size=\"large\"\r\n            @search=\"onSearch\"\r\n        />\r\n        <a-button style=\"margin-left: 10px\" size=\"large\" type=\"danger\" @click=\"loadTableData\">\r\n          重置\r\n        </a-button>\r\n      </div> -->\r\n      <a-table :loading=\"loading\" :columns=\"columns\" :data-source=\"data\" :sortDirections=\"['ascend', 'descend']\" rowKey=\"id\" @change=\"tableChange\" >\r\n        <a slot=\"name\" slot-scope=\"text\">{{ text }}</a>\r\n        <span slot=\"customTitle\"><a-icon type=\"smile-o\"/> 用户邮件</span>\r\n        <span slot=\"status\" slot-scope=\"status\">\r\n          <span v-show=\"status==1\" style=\"color:#52c41a\">成功</span>\r\n          <span v-show=\"status==0\" style=\"color:rgb(255, 77, 79)\">失败</span>\r\n        </span>\r\n        <span slot=\"action\" slot-scope=\"text, record, index\">\r\n        <a-divider type=\"vertical\"/>\r\n           <a-button @click=\"handleDelete(record,index)\" type=\"link\"><a-icon type=\"delete\"/> Delete</a-button>\r\n      </span>\r\n      </a-table>\r\n  \r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import {FindAllLoginLog,DeleteLoginLogById} from \"@/api/log\";\r\n  \r\n  const columns = [\r\n    {\r\n      dataIndex: 'email',\r\n      key: 'name',\r\n      slots: {title: 'customTitle'},\r\n      scopedSlots: {customRender: 'name'}\r\n    },\r\n    {\r\n      title: '浏览器类型',\r\n      dataIndex: 'browser',\r\n      key: 'description',\r\n    },\r\n    {\r\n      title: 'IP',\r\n      dataIndex: 'ip',\r\n      key: 'address',\r\n    },\r\n    {\r\n      title: '登录时间',\r\n      key: 'date',\r\n      dataIndex: 'date',\r\n      defaultSortOrder: 'descend', // 默认上到下为由大到小的顺序\r\n      sorter: (a, b) => { return a.date> b.date? 1 : -1 },\r\n      sortField: 'date'\r\n    },\r\n    {\r\n      title: '状态',\r\n      key: 'status',\r\n      dataIndex: 'status',\r\n      scopedSlots: {customRender: 'status'},\r\n    },\r\n    {\r\n      title: '更多操作',\r\n      key: 'action',\r\n      scopedSlots: {customRender: 'action'},\r\n    },\r\n  ];\r\n  \r\n  const data = [];\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        isorter:{\r\n          column:'date',\r\n          order:'desc'\r\n        },\r\n        loading: false,\r\n        modalLoading: false,\r\n        commodityVisible: false,\r\n        commodityLoading: false,\r\n        data: [],\r\n        columns,\r\n      };\r\n    },\r\n  \r\n    mounted() {\r\n      this.loadTableData()\r\n    },\r\n  \r\n    methods: {\r\n      //获取表格数据\r\n      loadTableData() {\r\n        this.loading = true\r\n        FindAllLoginLog().then(res=>{\r\n          setTimeout(() => {\r\n            this.loading = false\r\n            this.data = res.data\r\n          }, 600)\r\n        })\r\n      },\r\n      //发生排序动作的处理函数\r\n      tableChange(pagination, filters, sorter) {\r\n        const { current, pageSize } = pagination;\r\n        // this.pagination.pageSize = pageSize;\r\n        console.log(\"tableChange执行了\")\r\n        if (sorter.order) {\r\n          const { field, order } = sorter;\r\n          this.sort = field; // 排序的数据\r\n          this.sortType = order; // 排序方式\r\n        } else {\r\n          console.log(\"不做排序\");\r\n        }\r\n        this.loadTableData()\r\n      },\r\n      submitCommodity() {\r\n        this.modalLoading = true\r\n      },\r\n      //删除日志信息\r\n      handleDelete(r, index) {\r\n       DeleteLoginLogById(r.id).then((res) => {\r\n          if (res.status) this.$message.success('日志信息删除成功');\r\n          this.loadTableData()\r\n        })\r\n        console.log(index)\r\n      },\r\n  \r\n      handleUpdate(r) {\r\n        this.commodity = r\r\n        this.commodityVisible = true\r\n      },\r\n  \r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .editable-add-btn {\r\n    margin-bottom: 15px;\r\n  }\r\n  </style>\r\n  "]}]}